#include<iostream>
#include<vector>
using namespace std;
struct punkty
{
    double x;
    double y;
};
class Figura
{
public:
    int nr;
    virtual bool punkt(double x,double y)=0;

};
class Rectangle:public Figura
{
public:

    double xy1;
    double xy2;
    double xy3;
    double xy4;

    Rectangle(double a,double b,double c,double d,int l)
    {
    xy1=a;
    xy2=b;
    xy3=c;
    xy4=d;
     nr=l;
    }
    virtual bool punkt(double x, double y)
    {
        cout<<"a"<<endl;
        return true;
    }
};
class Triangle:public Figura
{
public:
    double a;
    double b;
    double c;
    double d;
    double e;
    double f;

    Triangle(double x1,double x2,double x3,double x4,double x5,double x6,int l)
    {
        a=x1;
        b=x2;
        c=x3;
        d=x4;
        e=x5;
        f=x6;
        nr=l;
    }

    virtual bool punkt(double x,double y)
    {
        return true;
    }

};
class Cyrcle:public Figura
{
public:
    double r1;
    double r2;
    double S;

    Cyrcle(double a,double b,double c,int l)
    {
        r1=a;
        r2=b;
        S=c;
        nr=l;
    }
  virtual bool punkt(double x,double y)
  {
      if(sqrt())//odległośc między punktami
  }
};

int main()
{
    vector<Figura*> F;
    while(1)
    {

        char a;
        int l=1;
        cin>>a;
        if(a=='*')break;
        switch(a)
            {
            case 'r':
                {
                    double x1,y1,x2,y2;
                    cin>>x1>>y1>>x2>>y2;
                    Rectangle R(x1,y1,x2,y2,l);
                    l++;
                    F.push_back(&R);
                    break;
                }
            case 'c':
                {
                    double r1,r2,S;
                    cin>>r1>>r2>>S;
                    Cyrcle C(r1,r2,S,l);
                    l++;
                    F.push_back(&C);
                    break;
                }
            case 't':
                {
                    double a,b,c,d,e,f;
                    cin>>a>>b>>c>>d>>e>>f;
                    Triangle T(a,b,c,d,e,f,l);
                    l++;
                    F.push_back(&T);
                    break;
                }

            }
    }
    int j=1;
    while(1)
    {
        punkty p;
        cin>>p.x>>p.y;
        if(p.x==9999.9 && p.y==9999.9)break;
        int how=0;
        for(int i=0;i<F.size();i++)
    {
        if(F[i]->punkt(p.x,p.y)){cout<<"Point "<<j<<" is contained in figure"<<F[i]->nr<<endl;how++;}

   }
        if(how==0)cout<<"Point "<<j<<" is not contained in any figure"<<endl;
       j++;
    }





return 0;}
